generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["jsonProtocol"]
}

datasource db {
  provider          = "postgresql"
  url               = env("POSTGRES_PRISMA_URL") // uses connection pooling
  directUrl         = env("POSTGRES_URL_NON_POOLING") // uses a direct connection
}

model Image {
  id   String @id @default(cuid())
  png  String
  webp String
  User User[]
}

model User {
  id        String    @id @default(cuid())
  username  String?
  createdAt DateTime  @default(now()) @map(name: "created_at")
  updatedAt DateTime  @updatedAt @map(name: "updated_at")
  image     Image     @relation(fields: [imageId], references: [id])
  imageId   String
  comment   Comment[]
  reply     Reply[]

  @@map(name: "users")
}

model Comment {
  id        String   @id @default(cuid())
  createdAt DateTime @default(now()) @map(name: "created_at")
  updatedAt DateTime @updatedAt @map(name: "updated_at")
  content   String
  score     Int      @default(0)
  user      User     @relation(fields: [userId], references: [id])
  userId    String
  replies   Reply[]

  @@map(name: "comments")
}

model Reply {
  id         Int      @id @default(autoincrement())
  createdAt  DateTime @default(now()) @map(name: "created_at")
  updatedAt  DateTime @updatedAt @map(name: "updated_at")
  content    String
  score      Int
  replyingTo String
  comment    Comment  @relation(fields: [commentId], references: [id])
  commentId  String
  user       User     @relation(fields: [userId], references: [id])
  userId     String
}
